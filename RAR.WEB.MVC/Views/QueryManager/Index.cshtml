@using NonFactors.Mvc.Grid;
@model RAR.ViewModel.QueryManagerViewModel

@{
    ViewData["Title"] = "Gestione dispacci";
}

@*<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@
@*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">*@
<script src="~/js/querymanager.js"></script>
<script src="~/js/paging.js"></script>
<link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet">

<h2>Query manager</h2>

<div class="container">
    <br />
    @if (@TempData["errore"] != null)
    {
        <div class="form-row alert ">
            <div class="col-md-12 alert-danger">
                <p>Errore - @TempData["Errore"]</p>
            </div>
        </div>
    }
    else if (Model.SelectedQuery != null && (Model.Resultset == null || !Model.Resultset.Any()))
    {
        <div class="form-row alert ">
            <div class="col-md-12 alert-info">
                <p>La query non ha restituito risultati</p>
            </div>
        </div>
    }

    <fieldset>
        <legend>
            Lista query
        </legend>
        <table class="table table-striped" >
            <thead>
                <tr>
                    <th></th>
                    <th>
                        @Html.DisplayNameFor(model => model.Querys.FirstOrDefault().IdQuery)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Querys.FirstOrDefault().Descrizione)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Querys.FirstOrDefault().Utente)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Querys)
                {
                    <tr>
                        <td><input type="button" name="ConfermaQuery" value="Conferma" class="btn btn-sm btn-outline-success" IdQuery="@item.IdQuery" /></td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IdQuery)
                        </td>
                        <td id="@item.IdQuery">
                            @Html.DisplayFor(modelItem => item.Descrizione)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Utente)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </fieldset>
    <br />
    <fieldset id="fieldsetQuery" style="display:none">
        <legend>
            SQL
        </legend>
        <form asp-controller="QueryManager" asp-action="Index">
            <div class="form-row">
                <div class="col-md-11" id="QueryDescription">
                </div>
                <div class="col-md-1">
                    <input type="text" id="idQuery" name="idQuery" style="border:none; background-color:transparent" class="col-md-1" />
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-12" style="padding:5px">
                    <div class="container-fluid " id="QuerySQL" tabindex='1'></div>
                </div>
            </div>
            <div class="form-row" id="divFullParameters">
                <div class="col-md-12">
                    <strong>Parametri</strong>
                </div>
                <div class="col-md-12">
                    <ul id="divParameters"></ul>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-2">
                    <input type="submit" id="eseguiQuery" value="Esegui" class="btn btn-primary" />
                </div>
            </div>
        </form>
    </fieldset>
    @if (Model.Resultset != null && Model.Resultset.Any())
    {
        <script>
            //$("#fieldsetQuery").show();
            //alert("@Model.SelectedQuery.Descrizione");
            //$('#fieldsetQuery').css('display', 'block');
            //$("#QuerySQL").text("@Model.SelectedQuery.SQL");
        </script>
        var columnsName = Model.Resultset.Take(1);
        <h3>Query: @Model.SelectedQuery.Descrizione</h3>
        @(Html
        .Grid(Model.Resultset.Skip(1))
        .Build(columns =>
        {
            foreach (var a in Model.Resultset.Take(1))
            foreach (var s in a)
            {
                columns.Add(model => model[Array.IndexOf(a, s)]).Titled(s);
            }
        })
        .Empty("La query non ha restituito risultati")
        .Filterable()
        .Sortable()
        //.Pageable()
        )
    }
</div>
@*<script>
    $(document).ready(function () {

        $("#fieldsetQuery").hide();
        $(function () {
            $(document).delegate('input[name=ConfermaQuery]', 'click',
                function (e) {
                    var current = $(this);
                    var idQuery = current.attr('IdQuery');
                    var descrizione = $("#" + idQuery + "").text();//.find("td[name=queryDescription]").html();
                    //alert(descrizione);
                    var data = {
                        ID_QUERY: idQuery
                    };
                    $.ajax({
                        url: '@Url.RouteUrl(new { action = "GetQuery", controller = "QueryManager" })',
                        type: 'GET',
                        data: data,
                        success: function (data) {
                            $("#QuerySQL").text(data);
                            $("#fieldsetQuery").show();
                            $("#QuerySQL").focus();
                            $("#idQuery").val(idQuery);
                            $("#QueryDescription").html("<strong>" + descrizione + "</strong>");
                            SetQueryParameters(data);
                        },
                        error: function (request, message, error) {
                            handleException(request, message, error);
                        }
                    });
                });
        });
    });*@

@* function SetQueryParameters(query) {
            const regex = /\$#(.+?)\#\$/gm;

            $("#divParameters").html("");
            match = regex.exec(query);

            if (match == null)
                $("#divFullParameters").hide();
            else {
                var result = new Array();
                while (match != null) {
                    $("#divFullParameters").show();
                    console.log(match[1]);

                    if (result.indexOf(match[1]) === -1) {
                        result.push(match[1]);

                        var newTextBoxDiv = $(document.createElement('div'));

                        newTextBoxDiv.after().html('<li><label>' + match[1] + ' : </label><input required type="text" name="' + match[1] + '" id="' + match[1] + '" value=""></li>');
                        newTextBoxDiv.appendTo("#divParameters");

                    }
                    match = regex.exec(query);
                }
            }
        }
    </script> *@
<script src="~/js/mvc-grid/mvc-grid.js"></script>
<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
    $(document).ready(function () {
        $('.mvc-grid').paging({ limit: 15 });
    });
</script>
